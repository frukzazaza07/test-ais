version: '3.8'

services:
  # PHP Application (Laravel)
  app:
    build:
      context: ../
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ../:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ../:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      - app-network

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: laravel_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: test-ais
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_PASSWORD: root
      MYSQL_USER: laravel_user
    volumes:
      - ./mysql/dbdata:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3308:3306"
    networks:
      - app-network

  # Node.js for Vue.js/Inertia.js Build
  node:
    image: node:20
    container_name: laravel_node
    working_dir: /var/www
    volumes:
      - ../:/var/www
    command: >
      sh -c "npm install && npm run build"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:


  # step for run
  # Build and start the containers
  # docker-compose up -d --build

  # Run Laravel migrations
  # docker-compose exec app php artisan migrate

  # Build SSR assets
  # docker-compose exec node npm run build